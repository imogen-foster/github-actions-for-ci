name: learn-github-actions          # Name of workflow (as it will appear in the Actions tab of the GH repo (optional)

on: [push]                          # Specify event that auto triggers the workflow file; here, the jobs run every time a 
                                    #   change is pushed to the repo
                                    
jobs:                               # Groups together all jobs that run in the learn-github-actions workflow file

  check-bats-version:               # Defines the name of the check-bats-version jobs stored within the jobs section
  
    runs-on: ubuntu-latest          # Configures job to run on Ubuntu Linux runner (means job will execute on a fresh VM 
                                    #   hosted by GH)
                                    
    steps:                           # Groups together all steps that run in the check-bats-version job; each job nested under 
                                    #   this section is a separate action or shell command
                                    
      - uses: actions/checkout@v2   # The "uses" keyword tells the job to retrieve v2 of the community action "actions/checkout@v2" 
                                    #   (checks out your repo and downloads it to the runner, allowing you to run actions 
                                    #   against your code); you must use the checkout action any time your workflow will run 
                                    #   against the repo's code or you're using an action defined in the repo
                                    
      - uses: actions/setup-node@v2 # This action installs the "node" software package on the runner, giving you access to 
                                    #   the "npm" command
                                    
      - run: npm install -g bats    # The "run" keyword tells the job to execute a command on the runner; here, using "npm" to 
                                    #   install the "bats" software testing package
                                    
      - run: bats -v                # Finally, you'll run the "bats" command with a parameter (-v) that outputs the software version
